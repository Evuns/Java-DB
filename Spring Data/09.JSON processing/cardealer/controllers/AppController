package com.example.cardealer.controllers;

import com.example.cardealer.constants.GlobalConstants;
import com.example.cardealer.models.dtos.*;
import com.example.cardealer.services.*;
import com.example.cardealer.utils.FileUtil;
import com.google.gson.Gson;
import org.modelmapper.ModelMapper;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;

@Component
public class AppController implements CommandLineRunner {
    private final Gson gson;
    private final ModelMapper modelMapper;
    private final SupplierService supplierService;
    private final PartService partService;
    private final CarService carService;
    private final CustomerService customerService;
    private final SaleService saleService;
    private final FileUtil fileUtil;

    public AppController(Gson gson, ModelMapper modelMapper,
                         SupplierService supplierService,
                         PartService partService, CarService carService,
                         CustomerService customerService, SaleService saleService, FileUtil fileUtil) {
        this.gson = gson;
        this.modelMapper = modelMapper;
        this.supplierService = supplierService;
        this.partService = partService;
        this.carService = carService;
        this.customerService = customerService;
        this.saleService = saleService;
        this.fileUtil = fileUtil;
    }


    @Override
    public void run(String... args) throws Exception {
        seedDatabase();
         firstQuery();
        secondQuery();


    }

    private void secondQuery() throws IOException {
        List<CarsMakeByToyota> cars = this.carService.carsFromToyota("Toyota");
        String json = gson.toJson(cars);
        this.fileUtil.write(json,GlobalConstants.QUERY_TWO_PATH);
    }

    private void firstQuery() throws IOException {
        List<CustomersByBirthDateDto> customersByBirthDateDto = this.customerService.
                findAllOrderByBirthday();
        String json = this.gson.toJson(customersByBirthDateDto);
        this.fileUtil.write(json, GlobalConstants.QUERY_ONE_PATH);
    }

    private void seedDatabase() throws FileNotFoundException {
        seedSuppliers();
        seedParts();
        seedCar();
        seedCustomers();
        seedService();


    }

    private void seedService() {
        this.saleService.generateSale();

    }

    private void seedCustomers() throws FileNotFoundException {
        CustomersSeedDto[] customersSeedDtos = this.gson.fromJson(new FileReader(
                GlobalConstants.CUSTOMERS_PATH), CustomersSeedDto[].class);
        this.customerService.seedCustomers(customersSeedDtos);
    }

    private void seedCar() throws FileNotFoundException {
        CarSeedDto[] carSeedDtos = this.gson.fromJson(new FileReader(
                GlobalConstants.CARS_PATH), CarSeedDto[].class);
        this.carService.seedCars(carSeedDtos);
    }

    private void seedParts() throws FileNotFoundException {
        PartsSeedDto[] partsSeed = this.gson.fromJson(new FileReader(
                GlobalConstants.PARTS_PATH), PartsSeedDto[].class);
        this.partService.seedParts(partsSeed);

    }

    private void seedSuppliers() throws FileNotFoundException {
        SupplierSeedDto[] seedDto = this.gson.fromJson(
                new FileReader(GlobalConstants.SUPPLIERS_PATH), SupplierSeedDto[].class);
        this.supplierService.seedSuppliers(seedDto);
    }
}
